// 배열 관련 함수 정리

import Foundation

// ==============================
// [ 정렬 ]
// ==============================

var arr1 = [1, 2, 5, 4, 3]
var arr2 = [1, 2, 5, 4, 3]
var arr3 = [1, 2, 5, 4, 3]

arr1.sorted() // 오름차순 정렬
// 오름차순이 default라서 빈 괄호 가능
// [1, 2, 3, 4, 5]

arr1.sorted(by: <) // 오름차순 정렬
arr1.sorted(by: >) // 내림차순 정렬
// [1, 2, 3, 4, 5]
// [5, 4, 3, 2, 1]

arr2.sorted(){$0 > $1} // 오름차순 정렬
arr2.sorted{$0 > $1} // 오름차순 정렬
// [1, 2, 3, 4, 5]
// [5, 4, 3, 2, 1]

// 기존 배열에 반영x, 반환 타입은 배열


// ==============================
// [ 앞, 뒤에서 원소 가져오기 ]
// ==============================

var arr4 = [1, 2, 5, 4, 3]

arr4.prefix(2) // 앞에서부터 원하는 개수의 요소 가져오기
arr4.suffix(2) // 뒤에서부터 원하는 개수의 요소 가져오기
// [1, 2]
// [4, 3]
// 기존 배열에 반영x, 반환 타입은 배열


// ==============================
// [ 배열의 길이 ]
// ==============================

var arr5 = [1, 2, 5, 4, 3]

arr5.count // 5
// 반환 타입은 Int


// ==============================
// [ 삽입 ]
// ==============================

var arr6 = [1, 2, 3]

arr6.append(5) // 배열 맨 뒤에 추가
arr6.insert(4, at: 3) // 원하는 위치에 삽입
// [1, 2, 3, 5]
// [1, 2, 3, 4, 5]
// 기존 배열에 반영, 반환 타입은 배열


// ==============================
// [ 삭제 ]
// ==============================

var arr7 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
var arr8 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

arr7.remove(at: 2) // 원하는 위치의 요소 제거
print(arr7)
arr7.removeLast() // 마지막 요소 제거
print(arr7)
arr7.removeFirst() // 첫 번째 요소 제거
print(arr7)
// 3
// [1, 2, 4, 5, 6, 7, 8, 9, 10]
// 10
// [1, 2, 4, 5, 6, 7, 8, 9]
// 1
// [2, 4, 5, 6, 7, 8, 9]
// 반환 타입은 삭제하려는 요소! 삭제된 배열 반환되는 것 아님.


arr7.removeLast(1) // 뒤에서부터 원하는 개수의 요소 제거
print(arr7)
arr7.removeFirst(2) // 앞에서부터 원하는 개수의 요소 제거
print(arr7)
arr7.removeAll() // 모든 요소 제거
print(arr7)
// [2, 4, 5, 6, 7, 8]
// [2, 4, 5, 6, 7, 8]
// [5, 6, 7, 8]
// [5, 6, 7, 8]
// []
// []
// 반환 타입은 삭제 완료한 배열! 삭제 요소 반환x


arr8.dropFirst() // 첫 번째 요소 제거
arr8.dropLast() // 마지막 요소 제거
print(arr8)
// [2, 3, 4, 5, 6, 7, 8, 9, 10]
// [1, 2, 3, 4, 5, 6, 7, 8, 9]
// [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

arr8.dropFirst(2) // 앞에서부터 원하는 개수의 요소 제거
arr8.dropLast(3) // 뒤에서부터 원하는 개수의 요소 제거
print(arr8)
// [3, 4, 5, 6, 7, 8, 9, 10]
// [1, 2, 3, 4, 5, 6, 7]
// [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

// 반환 타입은 제거 완료한 배열
// remove와 다른 점은, 제거 동작이 해당 배열에는 반영되지 않는다는 것!


// ==============================
// [ 검색 ]
// ==============================

var arr9 = [1, 2, 2, 3, 3, 4, 5]

arr9.contains(2) // 원하는 요소의 존재 여부 검색
// false
// 반환 타입은 Bool

arr9.startIndex // 첫 번째 인덱스 위치
arr9.endIndex // 마지막 인덱스 위치 + 1 (배열의 길이와 같음)
arr9.firstIndex(of: 2) // 원하는 요소의 가장 첫 번째 위치 검색
arr9.lastIndex(of: 3) // 원하는 요소의 가장 마지막 위치 검색
// 0
// 7
// 1
// 4
// 반환 타입은 Int

arr9[1...3] // 배열 위치 범위로 요소 검색
// [2, 3, 4]

// ==============================
// [ 수정 ]
// ==============================

var arr10 = [1, 2, 3, 4, 5]

arr10[1...3] = [0, 0, 0] // 원하는 범위 수정
print(arr10) // [1, 0, 0, 0, 5]
